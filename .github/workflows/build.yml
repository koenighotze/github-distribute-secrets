name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --timeout=5m

  build:
    name: Build & Test
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install dependencies
        run: make get.dependencies

      # - name: Run tests with coverage
      #   run: |
      #     make test.report
      #     go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      # - name: Upload Go test results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: Test-Results
      #     path: TestResults.json

      # - name: Upload coverage to Codecov
      #   if: matrix.os == 'ubuntu-24.04' && matrix.go-version == '1.24'
      #   uses: codecov/codecov-action@v4
      #   with:
      #     file: ./coverage.txt
      #     flags: unittests
      #     fail_ci_if_error: false

      - name: Build
        run: make build

  security:
    name: Security Scan
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install dependencies
        run: make get.dependencies

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
